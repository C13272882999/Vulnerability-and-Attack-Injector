package ToolControllers;

import Utils.HandleFiles;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import java.io.File;
import java.net.URL;
import java.util.ArrayList;
import java.util.ResourceBundle;

public class HackersToolController implements Initializable {

    @FXML private Button OpenXMLButton;
    @FXML private Button ProcessXMLButton;

    @FXML private TextField FileLocationTextField;
    @FXML private TextField NameTextField;
    @FXML private TextField LabelTextField;
    @FXML private TextField BrowsersTextField;

    //@FXML private TextArea VulnerabilityTextArea;
    @FXML private ListView<String> list;
    @FXML private TextArea CodeTextArea;
    @FXML private TextArea DescriptionTextArea;

    private final HandleFiles handleFiles = new HandleFiles();
    private File file;

    private ArrayList<String> XSSAttackNameArray = new ArrayList<>();
    private ArrayList<String> XSSAttackCodeArray = new ArrayList<>();
    private ArrayList<String> XSSAttackDescArray = new ArrayList<>();
    private ArrayList<String> XSSAttackLabelArray = new ArrayList<>();
    private ArrayList<String> XSSAttackBrowserArray = new ArrayList<>();

    @Override
    public void initialize(URL location, ResourceBundle resources) {

        //Open XML File
        OpenXMLButton.setOnAction(OpenXMLFileButtonEvent -> {
            file = handleFiles.OpenFileDialog("XML files (*.xml)","*.xml","Open XML File");
            if (file != null) {

                //Set Localization of Open File
                FileLocationTextField.setText(file.getAbsolutePath());

                //Activate Visual Elements
                ProcessXMLButton.setDisable(false);
            }
        });

        //Process XML File
        ProcessXMLButton.setOnAction(ProcessXMLFileButtonEvent -> ProcessVulnerabilityXML());
    }

    private void ProcessVulnerabilityXML() {

        XSSAttackNameArray.clear();
        XSSAttackCodeArray.clear();
        XSSAttackDescArray.clear();
        XSSAttackLabelArray.clear();
        XSSAttackBrowserArray.clear();

        try {
            DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();
            Document doc = docBuilder.parse(file);

            // normalize text representation
            doc.getDocumentElement().normalize();
            System.out.println("Root element of the doc is " + doc.getDocumentElement().getNodeName());

            NodeList listOfAttacks = doc.getElementsByTagName("attack");
            int totalAttacks = listOfAttacks.getLength();
            System.out.println("Total no of Attacks : " + totalAttacks);

            for (int s = 0; s < listOfAttacks.getLength(); s++) {

                Node firstAttackNode = listOfAttacks.item(s);
                if (firstAttackNode.getNodeType() == Node.ELEMENT_NODE) {


                    Element firstAttackElement = (Element) firstAttackNode;

                    //-------
                    NodeList nameList = firstAttackElement.getElementsByTagName("name");
                    Element nameElement = (Element) nameList.item(0);

                    NodeList textFNList = nameElement.getChildNodes();
                    System.out.println("Name : " + textFNList.item(0).getNodeValue().trim());
                    XSSAttackNameArray.add(textFNList.item(0).getNodeValue().trim());
                    list.getItems().add(textFNList.item(0).getNodeValue().trim());

                    //-------
                    NodeList codeList = firstAttackElement.getElementsByTagName("code");
                    Element codeElement = (Element) codeList.item(0);

                    NodeList textCodeList = codeElement.getChildNodes();
                    System.out.println("Code : " + textCodeList.item(0).getNodeValue().trim());
                    XSSAttackCodeArray.add(textCodeList.item(0).getNodeValue().trim());
                    //----
                    NodeList descList = firstAttackElement.getElementsByTagName("desc");
                    Element descElement = (Element) descList.item(0);

                    NodeList textDescList = descElement.getChildNodes();
                    System.out.println("Description : " + textDescList.item(0).getNodeValue().trim());
                    XSSAttackDescArray.add(textDescList.item(0).getNodeValue().trim());

                    //----
                    NodeList labelList = firstAttackElement.getElementsByTagName("label");
                    Element labelElement = (Element) labelList.item(0);

                    NodeList textLabelList = labelElement.getChildNodes();
                    System.out.println("Label : " + textLabelList.item(0).getNodeValue().trim());
                    XSSAttackLabelArray.add(textLabelList.item(0).getNodeValue().trim());

                    //----
                    NodeList browserList = firstAttackElement.getElementsByTagName("browser");
                    Element browserElement = (Element) browserList.item(0);

                    NodeList textBrowserList = browserElement.getChildNodes();
                    System.out.println("Browser : " + textBrowserList.item(0).getNodeValue().trim());
                    XSSAttackBrowserArray.add(textBrowserList.item(0).getNodeValue().trim());

                }//end of if clause


            }//end of for loop with s var

        }catch (Exception ignored){

        }

        NameTextField.setText(XSSAttackNameArray.get(0));
        CodeTextArea.setText(XSSAttackCodeArray.get(0));
        DescriptionTextArea.setText(XSSAttackDescArray.get(0));
        LabelTextField.setText(XSSAttackLabelArray.get(0));
        BrowsersTextField.setText(XSSAttackBrowserArray.get(0));
        //XSSAttackNames.setSelectedIndex(0);
    }
}
