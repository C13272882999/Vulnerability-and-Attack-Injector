package vaitcontrollers;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.MenuItem;
import javafx.scene.control.Tab;
import javafx.scene.control.TabPane;
import javafx.stage.Stage;

import java.io.IOException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import java.util.ResourceBundle;

public class MainController implements Initializable {

    @FXML private MenuItem ToolEncodeDecode;
    @FXML private MenuItem ToolRegex;
    @FXML private MenuItem ToolHackers;
    @FXML private MenuItem ToolJavaDBConsole;

    @FXML private TabPane VaitTabs;
    @FXML private Tab DatabaseTab;

    // Create a Map from all tabs.
    private Map<String,String> mapTabs = new HashMap<>();

    private Parent parentContent;
    private FXMLLoader tabLoader;

    @Override
    public void initialize(final URL location, final ResourceBundle resources) {

        //Filling HashMap with name and location of all tabs
        mapTabs.put("DatabaseTab", "/vaitviews/DatabaseView.fxml");
        mapTabs.put("InspectionTab", "/vaitviews/InspectionView.fxml");
        mapTabs.put("AttackTab", "/vaitviews/AttackView.fxml");
        mapTabs.put("TargetPHPTab", "/vaitviews/TargetPHPFileView.fxml");
        mapTabs.put("VulnerabilityInjectionTab", "/vaitviews/VulnerabilityInjectionView.fxml");
        mapTabs.put("ListenerTab", "/vaitviews/MySQLListenerView.fxml");
        mapTabs.put("ProxyTab", "/vaitviews/HTTPProxyView.fxml");
        mapTabs.put("PayloadTab", "/vaitviews/PayloadView.fxml");
        mapTabs.put("ManualAttackTab", "/vaitviews/ManualAttackView.fxml");
        mapTabs.put("BrowserTab", "/vaitviews/MiniBrowserView.fxml");
        mapTabs.put("IDSTab", "/vaitviews/IDSView.fxml");

        //Open Tool Encode Decode
        ToolEncodeDecode.setOnAction(encodeDecodeEvent -> {
                    try {
                        final FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/toolviews/EncoderToolView.fxml"));
                        final Parent encodeDecodeTool = fxmlLoader.load();
                        final Stage stage = new Stage();
                        stage.setTitle("Encode / Decode Tool");
                        stage.setResizable(false);
                        stage.setScene(new Scene(encodeDecodeTool));
                        stage.show();
                    } catch (Exception e) {
                        System.out.print(e.getMessage());
                    }
                });

        //Open Tool Regex
        ToolRegex.setOnAction(regexEvent -> {
                try {
                    final FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/toolviews/RegexToolView.fxml"));
                    final Parent regexTool = fxmlLoader.load();
                    final Stage stage = new Stage();
                    stage.setTitle("Regex Tool");
                    stage.setResizable(false);
                    stage.setScene(new Scene(regexTool));
                    stage.show();
                } catch (Exception e) {
                    System.out.print(e.getMessage());
                }
            });

        //Open Tool ha.ckers.org
        ToolHackers.setOnAction(hackersEvent -> {
            try {
                final FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/toolviews/HackersToolView.fxml"));
                final Parent hackersTool = fxmlLoader.load();
                final Stage stage = new Stage();
                stage.setTitle("ha.ckers.org Tool");
                stage.setResizable(false);
                stage.setScene(new Scene(hackersTool));
                stage.show();
            } catch (Exception e) {
                System.out.print(e.getMessage());
            }
        });

        //Open Tool Java DB SQL Console
        ToolJavaDBConsole.setOnAction(javaDBConsoleEvent -> {
            try {
                final FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/toolviews/JavaDBConsoleToolView.fxml"));
                final Parent javaDBConsoleTool = fxmlLoader.load();
                final Stage stage = new Stage();
                stage.setTitle("Java DB SQL Console");
                stage.setResizable(false);
                stage.setScene(new Scene(javaDBConsoleTool));
                stage.show();
            } catch (Exception e) {
                System.out.print(e.getMessage());
            }
        });

        //Load MainTab - Database
        tabLoader = new FXMLLoader(getClass().getResource("/vaitviews/DatabaseView.fxml"));
        try {
            parentContent = tabLoader.load();
        } catch (IOException e) {
            e.printStackTrace();
        }
        DatabaseTab.setContent(parentContent);
        
        VaitTabs.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {
            final String viewLocation = mapTabs.get(newValue.getId());
            tabLoader = new FXMLLoader(getClass().getResource(viewLocation));
            try {
                parentContent = tabLoader.load();
            } catch (IOException e) {
                e.printStackTrace();
            }
            newValue.setContent(parentContent);
        });
    }
}
